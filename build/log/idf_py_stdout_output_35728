[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Users\vinicius\Desktop\Projeto SAE\Projeto_Robo\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/build/bootloader/bootloader.bin""
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mcpwm_servo_control_example_main.c.obj
C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/main/mcpwm_servo_control_example_main.c: In function 'esp_spp_cb':
C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/main/mcpwm_servo_control_example_main.c:75:10: warning: unused variable 'bda_str' [-Wunused-variable]
   75 |     char bda_str[18] = {0};
      |          ^~~~~~~
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable Projeto_Robo.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/build/Projeto_Robo.bin
[7/7] cmd.exe /C "cd /D "C:\Users\vinicius\Desktop\Projeto SAE\Projeto_Robo\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/build/partition_table/partition-table.bin" "C:/Users/vinicius/Desktop/Projeto SAE/Projeto_Robo/build/Projeto_Robo.bin""
Projeto_Robo.bin binary size 0x98240 bytes. Smallest app partition is 0x100000 bytes. 0x67dc0 bytes (41%) free.
